import{defineComponent as e,createVNode as t,resolveComponent as a,mergeProps as l}from"vue";const o={data:{type:Array,default:()=>[]},align:{type:String,default:"center"},column:{type:Array,default:()=>[]}},n=e({name:"ElTableNext",props:{...o},setup:(e,{attrs:o,slots:n})=>()=>{const{data:r,column:p,align:s}=e,d=(e,o)=>{const{render:r,slotName:p,headerSlot:i,children:c,...u}=e,f={};return"function"==typeof r&&(f.default=e=>u.prop?r(e.row[u.prop],e):r(e)),p&&"function"==typeof n[p]&&(f.default=e=>n[p](e)),i&&n[i]&&(f.header=e=>n[i](e)),c?.length>0&&(f.default=e=>c.map(d)),t(a("el-table-column"),l({key:o,align:s},u),f)},i=p.map(d);return t("div",null,[t(a("el-table"),l({data:r,ref:"elTableRef"},o),{default:()=>[i],append:()=>n.append&&n.append(),empty:()=>n.empty&&n.empty()})])},mounted(){this.injectTablePrimaryMethods()},methods:{injectTablePrimaryMethods(){const e=this,t=e.$refs.elTableRef,a=["clearSelection","toggleRowSelection","toggleAllSelection","toggleRowExpansion","setCurrentRow","clearSort","clearFilter","doLayout","sort"];for(const l of a)e[l]?console.warn(`the ${l} method is exist!, please rename it `):e[l]=t?.[l]}}});n.install=function(e,t={}){e.component(n.name,n)};export{n as ElTableNext,n as default,o as tableProps};
